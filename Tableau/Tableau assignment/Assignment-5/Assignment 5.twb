<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Map' path='/t/srinath/workbooks' revision='1.0' site='srinath' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Data)' inline='true' name='federated.0la361a0pjr3up13vu80k05lpcy6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data' name='excel-direct.1b9ba1810pvlh613ee5ea0qnf4rd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Data science/assignment/Data analytics/Tableau assignment/Tableau assignment/Assignment-5/Data.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1b9ba1810pvlh613ee5ea0qnf4rd' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1b9ba1810pvlh613ee5ea0qnf4rd' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1b9ba1810pvlh613ee5ea0qnf4rd' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1b9ba1810pvlh613ee5ea0qnf4rd' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region (Returns)]' value='[Returns].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1080:no:A1:C1080:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1F6FA123A6054D9797330294E22E87A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_D197FB323C8B4E00909FE430C858DEDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_D197FB323C8B4E00909FE430C858DEDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_B873B626E12C4241A2CAF87FD7B54EF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_B873B626E12C4241A2CAF87FD7B54EF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_B873B626E12C4241A2CAF87FD7B54EF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregate-role-from='[Country]' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_1F6FA123A6054D9797330294E22E87A1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_D197FB323C8B4E00909FE430C858DEDF]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_B873B626E12C4241A2CAF87FD7B54EF6]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Location'>
          <field>[Country]</field>
          <field>[Region]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_1F6FA123A6054D9797330294E22E87A1'>
            <properties context=''>
              <relation connection='excel-direct.1b9ba1810pvlh613ee5ea0qnf4rd' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='integer' name='Postal Code' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Country' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Market' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_D197FB323C8B4E00909FE430C858DEDF'>
            <properties context=''>
              <relation connection='excel-direct.1b9ba1810pvlh613ee5ea0qnf4rd' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_B873B626E12C4241A2CAF87FD7B54EF6'>
            <properties context=''>
              <relation connection='excel-direct.1b9ba1810pvlh613ee5ea0qnf4rd' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_1F6FA123A6054D9797330294E22E87A1' />
            <second-end-point object-id='People_D197FB323C8B4E00909FE430C858DEDF' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_1F6FA123A6054D9797330294E22E87A1' />
            <second-end-point object-id='Returns_B873B626E12C4241A2CAF87FD7B54EF6' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Hyperlink1' name='[Action1_D81D54EA840C48819A2A63A626F6A5DF]'>
      <activation type='on-select' />
      <source datasource='federated.0la361a0pjr3up13vu80k05lpcy6' type='datasource'>
        <exclude-sheet name='Map' />
        <exclude-sheet name='Top 10' />
      </source>
      <link caption='' expression='https://en.wikipedia.org/wiki/&lt;[Country]&gt;' />
    </action>
    <datasources>
      <datasource caption='Orders (Data)' name='federated.0la361a0pjr3up13vu80k05lpcy6' />
    </datasources>
    <datasource-dependencies datasource='federated.0la361a0pjr3up13vu80k05lpcy6'>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#212529' fontname='Tinos,serif' fontsize='19'> Map top 10 countries, with most of the refunds on the world map</run>
            <run>Æ&#10;</run>
            <run fontcolor='#212529' fontname='Tinos,serif' fontsize='19'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Data)' name='federated.0la361a0pjr3up13vu80k05lpcy6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0la361a0pjr3up13vu80k05lpcy6'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0la361a0pjr3up13vu80k05lpcy6].[Longitude (generated)]' field-type='quantitative' max='42802957.952980541' min='6520481.8770530047' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0la361a0pjr3up13vu80k05lpcy6].[Latitude (generated)]' field-type='quantitative' max='13694172.179088665' min='-7458364.4718059096' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' />
              <text column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' />
              <text column='[federated.0la361a0pjr3up13vu80k05lpcy6].[cnt:Returned:qk]' />
              <geometry column='[federated.0la361a0pjr3up13vu80k05lpcy6].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0la361a0pjr3up13vu80k05lpcy6].[Latitude (generated)]</rows>
        <cols>[federated.0la361a0pjr3up13vu80k05lpcy6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{78A213F0-8B00-4A44-B142-08984704A0C0}' />
    </worksheet>
    <worksheet name='Top 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#212529' fontname='Tinos,serif' fontsize='19'>Order returned by the Customers from Top 10 Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Data)' name='federated.0la361a0pjr3up13vu80k05lpcy6' />
          </datasources>
          <datasource-dependencies datasource='federated.0la361a0pjr3up13vu80k05lpcy6'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Returned:nk]'>
            <groupfilter function='member' level='[none:Returned:nk]' member='&quot;Yes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0la361a0pjr3up13vu80k05lpcy6].[cnt:Returned:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Returned:nk]</column>
            <column>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0la361a0pjr3up13vu80k05lpcy6].[cnt:Returned:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0la361a0pjr3up13vu80k05lpcy6].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]</rows>
        <cols>([federated.0la361a0pjr3up13vu80k05lpcy6].[cnt:Returned:qk] + [federated.0la361a0pjr3up13vu80k05lpcy6].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{08D7F15B-8F8F-4B41-AFD6-315EE468246E}' />
    </worksheet>
    <worksheet name='URL Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Data)' name='federated.0la361a0pjr3up13vu80k05lpcy6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0la361a0pjr3up13vu80k05lpcy6'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' />
              <text column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' />
              <lod column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' />
              <geometry column='[federated.0la361a0pjr3up13vu80k05lpcy6].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0la361a0pjr3up13vu80k05lpcy6].[Latitude (generated)]</rows>
        <cols>[federated.0la361a0pjr3up13vu80k05lpcy6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{320C9E79-8327-4B75-B32E-87F8FFC1B0F5}' />
    </worksheet>
    <worksheet name='predication for 1 year '>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Data)' name='federated.0la361a0pjr3up13vu80k05lpcy6' />
          </datasources>
          <datasource-dependencies datasource='federated.0la361a0pjr3up13vu80k05lpcy6'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Returned:nk]'>
            <groupfilter function='member' level='[none:Returned:nk]' member='&quot;Yes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Returned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0la361a0pjr3up13vu80k05lpcy6].[yr:Order Date:ok]' value='113' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0la361a0pjr3up13vu80k05lpcy6].[fVal:sum:Sales:qk]' />
              <color column='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0la361a0pjr3up13vu80k05lpcy6].[none:Category:nk] * [federated.0la361a0pjr3up13vu80k05lpcy6].[fVal:sum:Sales:qk])</rows>
        <cols>[federated.0la361a0pjr3up13vu80k05lpcy6].[yr:Order Date:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{CF068528-C8D6-4E7D-BD7A-F8EE1ECCEE63}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]</field>
            <field>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{645FF1F3-ACB0-4370-BE55-6FE22087A8DC}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]</field>
            <field>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9AA25F13-3028-4D50-9870-9D08C3020EF7}' />
    </window>
    <window class='worksheet' maximized='true' name='predication for 1 year '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Category:nk]</field>
            <field>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Returned:nk]</field>
            <field>[federated.0la361a0pjr3up13vu80k05lpcy6].[qr:Order Date:ok]</field>
            <field>[federated.0la361a0pjr3up13vu80k05lpcy6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{423BF86D-71EB-4D3C-B6BF-6E284938A8D2}' />
    </window>
    <window class='worksheet' name='URL Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0la361a0pjr3up13vu80k05lpcy6].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35054A24-B20A-4F73-82A2-F0BCDD868923}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='URL Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='predication for 1 year ' width='192'>
      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
      n/H/AfDzAzbVncLTAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
